name: Build

# https://docs.github.com/en/actions/learn-github-actions/workflow-syntax-for-github-actions#concurrency
concurrency: 
  group: "build"
  cancel-in-progress: true

on:
  push:
    branches:
      # choose your default branch
      - master
      - main
    paths-ignore:
      - '*.md'
    tags:
      - 'v*'

jobs:
  build:
    permissions:
      contents: write
    runs-on: ubuntu-latest
    steps:
      - name: Checkout default branch
        uses: actions/checkout@master
        with:
          path: "src"

      - name: Checkout code
        uses: actions/checkout@v4.1.4

      - name: Create Branch
        id: create_branch
        uses: lablnet/create-branch-from-tag@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag_name: ${{ github.ref }}
          owner: ${{ github.repository_owner }}
          repo: ${{ github.event.repository.name }}

      - name: Checkout builds branch
        uses: actions/checkout@master
        with:
          ref: "builds"
          path: "builds"
      
      - name: Clean old builds
        # run: rm $GITHUB_WORKSPACE/builds/*.cs3
        run: |
          if ls $GITHUB_WORKSPACE/builds/*.cs3 1> /dev/null 2>&1; then
            rm $GITHUB_WORKSPACE/builds/*.cs3
          else
            echo "No files with .cs3 extension found, skipping cleanup."
          fi

      - name: Setup JDK 11
        uses: actions/setup-java@v1
        with:
          java-version: 11

      - name: Setup Android SDK
        uses: android-actions/setup-android@v2

      - name: Build Plugins
        run: |
          cd $GITHUB_WORKSPACE/src
          chmod +x gradlew
          ./gradlew make makePluginsJson
          cp **/build/*.cs3 $GITHUB_WORKSPACE/builds
          cp build/plugins.json $GITHUB_WORKSPACE/builds

      - name: Push builds
        run: |
          cd $GITHUB_WORKSPACE/builds
          git config --local user.email "actions@github.com"
          git config --local user.name "GitHub Actions"
          git add .
          git commit --amend -m "Build $GITHUB_SHA" || exit 0   # do not error if nothing to commit
          git push --force
